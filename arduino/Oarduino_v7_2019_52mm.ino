
#include <NTC_Thermistor.h>
#define SENSOR_PIN             A3 
#define REFERENCE_RESISTANCE   10000
#define NOMINAL_RESISTANCE     1600
#define NOMINAL_TEMPERATURE    25
#define B_VALUE              3950//3950
NTC_Thermistor* thermistor;

int Map=0;
float Psi=0;
float psia=0;
float psig=0;
float vaccum=0;
float Bar=0;
int torr=0;
int mbar=0;
int vafr=0;
float afr=0;
float volt=0;

//Bouton Poussoir
const int bp=5;
boolean vbp=0;
boolean vbpmem=0;
int mode = 0;
//Nombre de mode
int nbrmode=7;

#define potmeterPin A0 
int p;


#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define OLED_RESET 4
Adafruit_SSD1306 display1(OLED_RESET);
#include <Fonts/FreeSansBoldOblique24pt7b.h>
#define honda_HEIGHT 64
#define honda_WIDTH  128
// Le dessin sous forme d'octet
const unsigned char honda [] PROGMEM = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xb8, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0x3c, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0x7c, 0x1f, 0xc0, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0x78, 0x1f, 0xc0, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x06, 0xf0, 0x1f, 0xc0, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0e, 0xf0, 0x1f, 0xc0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0e, 0xe0, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x60, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1d, 0xc0, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3d, 0x80, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1e, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1e, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1e, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1e, 0x40, 0x1f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1f, 0x40, 0x1f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1f, 0x20, 0x1f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0xa0, 0x1f, 0xfc, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x90, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0xd0, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xe8, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xdf, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,



 
 // 'honda-logo
/*0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0x00, 0x00, 0x07, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x07, 0xe0, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x07, 0xe0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0f, 0x80, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x03, 0xf0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0f, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0xf0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x1e, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0xf8, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x1e, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x78, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x3c, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x7c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x3c, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x3c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x3c, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x3c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x3c, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x3c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x3c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x1e, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x1c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x38, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x1c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x38, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x38, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x3c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x3c, 0x00, 0x1f, 0xff, 0x00, 0x01, 0xff, 0xf8, 0x00, 0x3c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x3c, 0x00, 0x1f, 0xff, 0xe0, 0x07, 0xff, 0xf8, 0x00, 0x3c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x3c, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x3c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x3c, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x3c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x3c, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x3c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x3c, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x38, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x1c, 0x00, 0x1f, 0xff, 0xf0, 0x1f, 0xff, 0xf8, 0x00, 0x38, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x1c, 0x00, 0x1f, 0xff, 0x80, 0x01, 0xff, 0xf8, 0x00, 0x78, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x1e, 0x00, 0x1f, 0xff, 0x00, 0x00, 0xff, 0xf8, 0x00, 0x78, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x1e, 0x00, 0x1f, 0xff, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x78, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x1e, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x78, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0e, 0x00, 0x0f, 0xfe, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0f, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0f, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x0f, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x3f, 0xf0, 0x01, 0xe0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x07, 0x80, 0x0f, 0xf8, 0x00, 0x00, 0x3f, 0xf0, 0x01, 0xe0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x07, 0x80, 0x0f, 0xf8, 0x00, 0x00, 0x1f, 0xf0, 0x03, 0xe0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xc0, 0x0f, 0xf8, 0x00, 0x00, 0x1f, 0xf0, 0x03, 0xc0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xe0, 0x0f, 0xf8, 0x00, 0x00, 0x1f, 0xf0, 0x07, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x01, 0xf0, 0x0f, 0xf0, 0x00, 0x00, 0x1f, 0xf0, 0x0f, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xfc, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xe0, 0x3f, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

*/



};

int red_light_pin= 2;
int green_light_pin = 3;
int blue_light_pin = 12;

void setup()   {                
  display1.clearDisplay();
  
  //display1.begin(SSD1306_SWITCHCAPVCC); 
  display1.begin(SSD1306_SWITCHCAPVCC,0x3c);
  display1.drawBitmap(0, 0,  honda, 128, 64, 1);
 display1.display();
 
 
 pinMode(red_light_pin, OUTPUT);
  pinMode(green_light_pin, OUTPUT);
  pinMode(blue_light_pin, OUTPUT);
  
pinMode(13, OUTPUT);
 digitalWrite(13, HIGH);
pinMode(11, OUTPUT);
 digitalWrite(11, LOW);
 
pinMode(bp, INPUT_PULLUP);//BP
pinMode(4, OUTPUT);//BP-
 digitalWrite(4, LOW);//BP-
//u8g.setFont(u8g_font_unifont);
//u8g.setFont(u8g_font_chikita);
//  u8g.setColorIndex(1);    
// pinMode(vccPin, OUTPUT); digitalWrite(vccPin, HIGH);
//  pinMode(gndPin, OUTPUT); digitalWrite(gndPin, LOW);
 delay(100);


thermistor = new NTC_Thermistor(
    SENSOR_PIN,
    REFERENCE_RESISTANCE,
    NOMINAL_RESISTANCE,
    NOMINAL_TEMPERATURE,
    B_VALUE
  );
 
 
 
}

void loop() {

vbp= digitalRead(bp); //Lecture de l'état du BP
   
  if ((vbp != vbpmem)&&(vbp == LOW)) //si on appuie sur le BP
  {
    mode++; //On incrémente la variable mode
  }
   
  vbpmem=vbp; //on mémorise l'état du bouton


  if (mode == nbrmode) //Qd la variable mode vaut nbrmode on la repasse à zéro (ie quand on attend le dernier mode)
  {
    mode=0;
  }


   
  switch (mode) //Application du mode
  {
case 0:   
    display1.clearDisplay();
    Start(); 
  
    break;

case 1:
    display1.clearDisplay();
   graphafr();
   //led();
    break;



case 2:
    display1.clearDisplay();
    graphoiltemp();
    // led();

break;




case 3:
    display1.clearDisplay();
    graphoilpress();
    // led();

break;





case 4:
    display1.clearDisplay();
    graphfuelpress();
    // led();

break;





case 5:
    display1.clearDisplay();
 MAP();
 //led();
    break;


case 6:
    display1.clearDisplay();
 Resume();
 //led();
    break;
    
}










}
void Start()
{
 display1.drawBitmap(0, 0,  honda, 128, 64, 1);
 display1.display();
/*for(int i=0; i<255; i++) {
analogWrite(red_light_pin,i );
  analogWrite(green_light_pin,255-i );
  analogWrite(blue_light_pin,0 );
delay(10);
}
for(int i=0; i<255; i++) {
analogWrite(red_light_pin,255-i );
  analogWrite(green_light_pin,0 );
  analogWrite(blue_light_pin,i );
delay(10);
}

for(int i=0; i<255; i++) {
analogWrite(red_light_pin,0 );
  analogWrite(green_light_pin,i );
  analogWrite(blue_light_pin,255-i );
delay(10);
}*/



 
 //RGB_color(150, 0, 0); // Red
 // delay(100);
 // RGB_color(0, 255, 0); // Green
 // delay(100);
//  RGB_color(0, 0, 255); // Blue
 // delay(100);
  //RGB_color(255, 255, 125); // Raspberry
 // delay(100);
 // RGB_color(0, 255, 255); // Cyan
 // delay(100);
 // RGB_color(255, 0, 255); // Magenta
 // delay(100);
 // RGB_color(255, 255, 0); // Yellow
 // delay(100);
 // RGB_color(255, 255, 255); // White
 // delay(100);

 }



void graphafr()
{
//value=analogRead(A0);
//vafr=value/1.59;
//float afr = (-5.5905*(value*5.0/1024)+17.664);// AUTRE FORMULE VOLT LAMBDA

p = analogRead(potmeterPin);  //A0
 vafr=p/7.99;             
 volt = p*5.0/1023;
 afr = 10+volt*2;




display1.drawFastVLine( 67,0 ,25 ,1 );
display1.drawRect(0,0, 128, 25, 1);
display1.fillRect(vafr, 0, 12, 24, WHITE);

display1.setTextSize(3);
//display1.setFont(&FreeSansBoldOblique24pt7b);
display1.setTextColor(WHITE);
display1.setCursor(8,40);
display1.println(afr,2);
display1.setTextSize(1);
display1.setCursor(98,53);
display1.setTextSize(1);
display1.print("AFR");
/*display1.setFont();
display1.setTextSize(1);
display1.setTextColor(WHITE);
display1.setCursor(0,16);
//display1.print("L");
display1.setCursor(121,16);
//display1.print("R");
*/display1.display();
delay(100);
}



void graphoiltemp()
{

float temp=thermistor->readCelsius();

display1.drawFastVLine( 67,0 ,25 ,1 );
display1.drawRect(0,0, 128, 25, 1);
display1.fillRect(temp, 0, 12, 24, WHITE);


display1.setTextSize(3);
display1.setTextColor(WHITE);
display1.setCursor(9,40);
display1.print(temp ,1);
display1.setTextSize(2);
display1.println("\xf7");
display1.setTextSize(1);
display1.setCursor(100,53);
display1.print("Oil");
display1.display();


if (temp<30){
 digitalWrite(2, HIGH);

delay(35);
 digitalWrite(2, LOW);

 }
else {
  digitalWrite(2, LOW);
}


if (temp >= 60){


 // RGB_color(255, 0, 0); // Red
 RGB_color(0, 255, 0); // Green
// RGB_color(0, 0, 255); // Blue

 }
else {

// RGB_color(0, 0, 0); // Red
 RGB_color(0, 0, 0); // Green
/// RGB_color(0, 0, 0); // Blue
 
}


delay(100);
}






void graphoilpress()
{
int sensorValue = analogRead(A1);
float r = sensorValue / 7.98;
 float voltage = sensorValue * (5.0 / 1023.0);
 float pressure_pascal = (3.0*((float)voltage))*1000000.0;
 float pressure_bar = pressure_pascal/10e5-1;
float pressu= sensorValue/10-1;

display1.drawFastVLine( 67,0 ,25 ,1 );
display1.drawRect(0,0, 128, 25, 1);
display1.fillRect(pressu, 0, 12, 25, WHITE);

display1.setTextSize(3);
display1.setTextColor(WHITE);
display1.setCursor(9,40);
display1.println(pressure_bar);
display1.setCursor(100,40);
display1.setTextSize(1);
display1.print("Oil");
display1.setCursor(98,53);
display1.setTextSize(1);
display1.print("Bar");
display1.display();




delay(100);
}



void graphfuelpress()
{
int sensorValue = analogRead(A2);
float r = sensorValue / 7.98;
 float voltage = sensorValue * (5.0 / 1023.0);
 float pressure_pascal = (3.0*((float)voltage-0.47))*1000000.0;
 float pressure_bar = pressure_pascal/10e5-1;
float pressu= sensorValue/10-1;
 
display1.drawFastVLine( 67,0 ,25 ,1 );
display1.drawRect(0,0, 128, 25, 1);
display1.fillRect(pressu, 0, 12, 25, WHITE);

display1.setTextSize(3);
display1.setTextColor(WHITE);
display1.setCursor(9,40);
display1.println(pressure_bar);
display1.setCursor(100,40);
display1.setTextSize(1);
display1.print("Fuel");
display1.setCursor(98,53);
display1.setTextSize(1);
display1.print("Bar");
display1.display();
delay(100);
}


void MAP()                    //Manifold Absolute Pressure sensor (A5)
{
  Map = analogRead(A6);
  Psi = (Map-.32)*(10.94-(-13.9))/(1023+ (-13.9));
  psig = Psi-14.7;
  vaccum = psig*2.036021;
  Bar = psig * 0.0689475729; // Convert from psi to bar
  //torr=psig*51,71493;
    mbar=psig*66.89475729;
//Psi = ((((float)Map/(float)1023+0.04)/0.004)*0.145)-10.15;
//(Map-0.5)*(1023-167.77)/(4.5-0.5)+167.77;
//psia = (Psi-167.77)*(10.6-0.01)/(1023-167.77)+0.01;
//((Map * (0.005) /(0.022)+20)*(0.145)-10.15); 

display1.drawFastVLine( 67,0 ,25 ,1 );
display1.drawRect(0,0, 128, 25, 1);
display1.fillRect(Psi, 0, 12, 25, WHITE);

display1.setTextSize(3);
display1.setTextColor(WHITE);
display1.setCursor(9,40);
display1.println(psig,1);
display1.setCursor(100,40);
display1.setTextSize(1);
display1.print("Map");
display1.setCursor(98,53);
display1.setTextSize(1);
display1.print("Psi");
display1.display();

//display1.print("BAR:");
//display1.println(Bar);
//display1.print("mB:");
//display1.println(mbar);

display1.display();    
delay(100);


                                                 
}










void Resume()
{

p = analogRead(potmeterPin);  //A0
 vafr=p/7.99;             
 volt = p*5.0/1023;
 afr = 10+volt*2;

int sensorValue = analogRead(A1);//  OIL PRESS
float r = sensorValue / 7.98;
 float voltage = sensorValue * (5.0 / 1023.0);
 float pressure_pascal = (3.0*((float)voltage))*1000000.0;
 float pressure_bar = pressure_pascal/10e5-1;
float pressu= sensorValue/10-1;

int sensorValu = analogRead(A2); //FUEL PRESS
float f = sensorValu / 7.98;
 float voltag = sensorValu * (5.0 / 1023.0);
 float pressure_pasca = (3.0*((float)voltag-0.47))*1000000.0;
 float pressure_ba = pressure_pasca/10e5-1;
float pres= sensorValu/10-1;


float temp=thermistor->readCelsius();//A3 OIL TEMP 


 Map = analogRead(A6);// MAP
  Psi = (Map-.32)*(10.94-(-13.9))/(1023+ (-13.9));
  psig = Psi-14.7;
  vaccum = psig*2.036021;
  Bar = psig * 0.0689475729; // Convert from psi to bar
  //torr=psig*51,71493;
    mbar=psig*66.89475729;
//Psi = ((((float)Map/(float)1023+0.04)/0.004)*0.145)-10.15;
//(Map-0.5)*(1023-167.77)/(4.5-0.5)+167.77;
//psia = (Psi-167.77)*(10.6-0.01)/(1023-167.77)+0.01;
//((Map * (0.005) /(0.022)+20)*(0.145)-10.15); 





display1.setTextSize(2);
display1.setTextColor(WHITE);
display1.setCursor(0,0);
  display1.println("Oil:");
display1.setCursor(0,24);
display1.print(temp,1);
display1.setTextSize(2);
display1.println("\xf7"); 
  display1.setCursor(0,46);
display1.print(pressure_bar,1);
display1.println(" Bar"); 
display1.display();
delay(100);
}






void RGB_color(int red_light_value, int green_light_value, int blue_light_value)
 {
  analogWrite(red_light_pin, red_light_value);
  analogWrite(green_light_pin, green_light_value);
  analogWrite(blue_light_pin, blue_light_value);
}





void led()
{

  
if (afr>16){
 digitalWrite(12, HIGH);
 delay(25);
 digitalWrite(12,LOW);
 digitalWrite(4, LOW);
  digitalWrite(3, LOW);
    digitalWrite(2, LOW);
  }

  }



  // 'Sans titreHTS', 128x64px
/*const unsigned char myBitmap [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xb8, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0x3c, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0x7c, 0x1f, 0xc0, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0x78, 0x1f, 0xc0, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x06, 0xf0, 0x1f, 0xc0, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0e, 0xf0, 0x1f, 0xc0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0e, 0xe0, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x60, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1d, 0xc0, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3d, 0x80, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3d, 0x80, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1e, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1e, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1e, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1e, 0x40, 0x1f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1f, 0x40, 0x1f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1f, 0x20, 0x1f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0xa0, 0x1f, 0xfc, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x90, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0xd0, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xe8, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xdf, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};*/
